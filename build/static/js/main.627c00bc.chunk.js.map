{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Inventory.js","sample-fishes.js","components/Fish.js","base.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","action","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","proTypes","PropTypes","string","isRequired","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOption","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","e","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Inventory","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","App","state","Date","now","setState","sampleFishes","params","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","syncState","context","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.627c00bc.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'EUR',\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-')\n    .replace(/[^\\w-]+/g, '')\n    .replace(/--+/g, '-')\n    .replace(/^-+/, '')\n    .replace(/-+$/, '');\n}\n\nexport function getFunName() {\n  const adjectives = [\n    'adorable',\n    'beautiful',\n    'clean',\n    'drab',\n    'elegant',\n    'fancy',\n    'glamorous',\n    'handsome',\n    'long',\n    'magnificent',\n    'old-fashioned',\n    'plain',\n    'quaint',\n    'sparkling',\n    'ugliest',\n    'unsightly',\n    'angry',\n    'bewildered',\n    'clumsy',\n    'defeated',\n    'embarrassed',\n    'fierce',\n    'grumpy',\n    'helpless',\n    'itchy',\n    'jealous',\n    'lazy',\n    'mysterious',\n    'nervous',\n    'obnoxious',\n    'panicky',\n    'repulsive',\n    'scary',\n    'thoughtless',\n    'uptight',\n    'worried',\n  ];\n\n  const nouns = [\n    'women',\n    'men',\n    'children',\n    'teeth',\n    'feet',\n    'people',\n    'leaves',\n    'mice',\n    'geese',\n    'halves',\n    'knives',\n    'wives',\n    'lives',\n    'elves',\n    'loaves',\n    'potatoes',\n    'tomatoes',\n    'cacti',\n    'foci',\n    'fungi',\n    'nuclei',\n    'syllabuses',\n    'analyses',\n    'diagnoses',\n    'oases',\n    'theses',\n    'crises',\n    'phenomena',\n    'criteria',\n    'data',\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","/* eslint-disable*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  static propTypes = {\n    history: PropTypes.object\n  }\n\n  goToStore = event => {\n    // 1. Stop the for from submitting\n    event.preventDefault();\n    // 2. Get the text from that input\n    const storeName = this.myInput.current.value;\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2> Please Enter a store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store 👉🏼</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.proTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","/* eslint-disable react/button-has-type */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { formatPrice } from '../helpers';\n\nclass Order extends Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  };\n\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOption = {\n      classNames: 'order',\n      key,\n      timeout: { enter: 250, exit: 250 },\n    };\n    // Make sure the fish is loaded before we continue\n    if (!fish) return null;\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOption}>\n          <li>Sorry {fish ? fish.name : 'fish'} is no longer available </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOption}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 250, exit: 250 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends Component {\n  nameRef = React.createRef();\n\n  priceRef = React.createRef();\n\n  statusRef = React.createRef();\n\n  descRef = React.createRef();\n\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func,\n  };\n\n  createFish = e => {\n    e.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n    // eslint-disable-next-line\n    this.props.addFish(fish);\n    // refresh the form\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input type=\"text\" ref={this.nameRef} name=\"name\" placeholder=\"Name\" />\n        <input\n          type=\"text\"\n          ref={this.priceRef}\n          name=\"price\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"></textarea>\n        <input\n          type=\"text\"\n          ref={this.imageRef}\n          name=\"image\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add fish </button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","/* eslint-disable react/button-has-type */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n  };\n\n  handleChange = event => {\n    // update that fish\n    // 1. Take a copy of the curernt fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value,\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","/* eslint-disable react/button-has-type */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n  };\n\n  render() {\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: 'Pacific Halibut',\n    image: '/images/hali.jpg',\n    desc:\n      'Everyone’s favorite white fish. We will cut it to the size you need and ship it.',\n    price: 1724,\n    status: 'available',\n  },\n\n  fish2: {\n    name: 'Lobster',\n    image: '/images/lobster.jpg',\n    desc:\n      'These tender, mouth-watering beauties are a fantastic hit at any dinner party.',\n    price: 3200,\n    status: 'available',\n  },\n\n  fish3: {\n    name: 'Sea Scallops',\n    image: '/images/scallops.jpg',\n    desc:\n      'Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound',\n    price: 1684,\n    status: 'unavailable',\n  },\n\n  fish4: {\n    name: 'Mahi Mahi',\n    image: '/images/mahi.jpg',\n    desc:\n      'Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. ',\n    price: 1129,\n    status: 'available',\n  },\n\n  fish5: {\n    name: 'King Crab',\n    image: '/images/crab.jpg',\n    desc:\n      'Crack these open and enjoy them plain or with one of our cocktail sauces',\n    price: 4234,\n    status: 'available',\n  },\n\n  fish6: {\n    name: 'Atlantic Salmon',\n    image: '/images/salmon.jpg',\n    desc:\n      'This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!',\n    price: 1453,\n    status: 'available',\n  },\n\n  fish7: {\n    name: 'Oysters',\n    image: '/images/oysters.jpg',\n    desc: 'A soft plump oyster with a sweet salty flavor and a clean finish.',\n    price: 2543,\n    status: 'available',\n  },\n\n  fish8: {\n    name: 'Mussels',\n    image: '/images/mussels.jpg',\n    desc:\n      'The best mussels from the Pacific Northwest with a full-flavored and complex taste.',\n    price: 425,\n    status: 'available',\n  },\n\n  fish9: {\n    name: 'Jumbo Prawns',\n    image: '/images/prawns.jpg',\n    desc:\n      'With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.',\n    price: 2250,\n    status: 'available',\n  },\n};\n\nexport default fishes;\n","/* eslint-disable react/button-has-type */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    addToOrder: PropTypes.func,\n  };\n\n  handleClick = () => {\n    this.props.addToOrder(this.props.index);\n  };\n\n  render() {\n    const { name, image, price, desc, status } = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={this.handleClick}>\n          {isAvailable ? 'Add To Order' : 'Sold out!'}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyD93a008_l40yCt_u9Jy7oGk4BVf5159cw',\n  authDomain: 'catch-of-the-day-difilippo.firebaseapp.com',\n  databaseURL: 'https://catch-of-the-day-difilippo.firebaseio.com',\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp };\n\nexport default base;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable react/destructuring-assignment */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  static propTypes = {\n    match: PropTypes.object,\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes',\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update that state\n    fishes[key] = updatedFish;\n    // 3. Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = key => {\n    // 1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update that state\n    fishes[key] = null;\n    // 3. Set that to state\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Remove from our order\n    delete order[key];\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!?!!!!1111</h2>\n  </div>\n);\n\nexport default NotFound;\n","/* eslint-disable*/\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}